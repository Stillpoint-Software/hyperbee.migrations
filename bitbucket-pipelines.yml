#  Build and publish .NET Core package

image: mcr.microsoft.com/dotnet/sdk:6.0

definitions:
  steps:
    - step: &build-test
        name: Build and Unit Test
        caches:
          - dotnetcore
        script:
          # Find the solution file
          - SOLUTION_FILES=$(find *.sln)
          - if [ ${#SOLUTION_FILES[@]} -ne 1 ]; then echo "INDETERMINATE SOLUTION TARGET." ; exit 1 ; else SOLUTION_NAME=${SOLUTION_FILES[0]%.sln} ; fi
          - echo "SOLUTION_NAME is $SOLUTION_NAME"

          # Select Configuration
          - if [ $BITBUCKET_BRANCH == 'master' ]; then BUILD_CONFIGURATION='Release' ; else BUILD_CONFIGURATION='Debug' ; fi
          - echo "BITBUCKET_BRANCH is $BITBUCKET_BRANCH"
          - echo "BUILD_CONFIGURATION is $BUILD_CONFIGURATION"

          # Build Solution
          - dotnet restore ${SOLUTION_NAME}.sln --source ${NUGET_SOURCE_LPOINT} --source https://www.nuget.org/api/v2/
          - dotnet build --no-restore ${SOLUTION_NAME}.sln --configuration ${BUILD_CONFIGURATION}
              
          # Run Unit Tests
          - REPORTS_PATH=./test-reports/build_${BITBUCKET_BUILD_NUMBER}
          - dotnet tool install -g trx2junit
          - dotnet test --no-build --configuration ${BUILD_CONFIGURATION} --logger:trx --results-directory:./TestResults

        after-script:
          # Unit Test Post-Processing
          - export PATH="$PATH:/root/.dotnet/tools"
          - trx2junit ./TestResults/*.trx

    - step: &build-test-publish
        name: Publish Packages
        caches:
          - dotnetcore
        script:
          # Find the solution file
          - SOLUTION_FILES=$(find *.sln)
          - if [ ${#SOLUTION_FILES[@]} -ne 1 ]; then echo "INDETERMINATE SOLUTION TARGET." ; exit 1 ; else SOLUTION_NAME=${SOLUTION_FILES[0]%.sln} ; fi
          - echo "SOLUTION_NAME is $SOLUTION_NAME"

          # Select Configuration
          - if [ $BITBUCKET_BRANCH == 'master' ]; then BUILD_CONFIGURATION='Release' ; else BUILD_CONFIGURATION='Debug' ; fi
          - if [ $BITBUCKET_BRANCH == 'master' ]; then VERSION_SUFFIX='' ; else VERSION_SUFFIX="develop."$(date +%y%m%d%H%M%S) ; fi
          - echo "BITBUCKET_BRANCH is $BITBUCKET_BRANCH"
          - echo "BUILD_CONFIGURATION is $BUILD_CONFIGURATION"

          # Build Solution
          - dotnet restore ${SOLUTION_NAME}.sln --source ${NUGET_SOURCE_LPOINT} --source https://www.nuget.org/api/v2/
          - dotnet build --no-restore ${SOLUTION_NAME}.sln --configuration ${BUILD_CONFIGURATION}
              
          # Run Unit Tests
          - REPORTS_PATH=./test-reports/build_${BITBUCKET_BUILD_NUMBER}
          - dotnet tool install -g trx2junit
          - dotnet test --no-build --configuration ${BUILD_CONFIGURATION} --logger:trx --results-directory:./TestResults
              
          # Pack and Publish
          - dotnet pack --no-build --configuration ${BUILD_CONFIGURATION} --output ./output --version-suffix "${VERSION_SUFFIX}" -p:PackageSource='${NUGET_SOURCE_LPOINT}' -p:PushAfterPack=true

        after-script:
          # Unit Test Post-Processing
          - export PATH="$PATH:/root/.dotnet/tools"
          - trx2junit ./TestResults/*.trx

pipelines:
  custom:
    build-staging:
      - step:
          <<: *build-test
          deployment: Staging

    publish-staging:
      - step:
          <<: *build-test-publish
          deployment: Staging
